{"version":3,"sources":["theme/theme.js","components/CustomeSelect/CustomeSelect.js","utils/constants.js","utils/helpers.js","components/TaskCard/styles.js","components/Comments/Comments.js","components/TaskCard/TaskCard.js","components/Spinner/Spinner.jsx","components/SnackBar/SuccessSnackbar.js","actions/type.action.js","pages/Home/components/Dialog.js","pages/Home/Home.js","actions/user.action.js","actions/task.action.js","actions/comment.action.js","pages/Login/Login.js","actions/auth.action.js","pages/Register/Register.js","routes/routes.js","layout/Layout.js","routes/PrivateRoute.js","routes/Body.js","actions/message.action.js","reducers/auth.reducer.js","reducers/task.reducer.js","reducers/loading.reducer.js","reducers/message.reducer.js","reducers/user.reducer.js","reducers/index.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["createMuiTheme","typography","useNextVariants","fontFamily","join","CustomeSelect","props","label","value","onChange","options","className","name","FormControl","size","variant","fullWidth","InputLabel","htmlFor","Select","inputProps","id","map","item","i","MenuItem","TOKEN","task_types","todo_status","getInitials","initials","split","forEach","useStyles","makeStyles","theme","root","maxWidth","marginBottom","media","height","paddingTop","input","spaceBottom","avatar","background","color","backgroundColor","red","Comments","user","data","classes","Grid","container","justify","md","sm","xs","Avatar","aria-label","Typography","paragraph","RecipeReviewCard","creator","type","users","updatedAt","deleteTask","_id","assignedUser","status","createComment","loadComments","editTask","deleted","React","useState","expanded","setExpanded","comment","setComment","comments","setComments","anchor","setAnchor","stateStatus","setStatus","setUser","useEffect","Object","keys","length","handleExpandClick","a","handleClose","submitComment","localStorage","getItem","JSON","parse","task","Card","Menu","anchorEl","keepMounted","open","Boolean","onClose","onClick","CardHeader","action","IconButton","e","currentTarget","MoreVert","title","subheader","Date","toLocaleString","CardMedia","component","autoPlay","src","image","style","textAlign","CardContent","disabled","target","CardActions","disableSpacing","Chat","Collapse","in","timeout","unmountOnExit","TextField","Button","clsx","key","backdrop","zIndex","drawer","connect","state","loading","Backdrop","CircularProgress","message","display","alignItems","success","danger","SuccessSnackbar","text","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","ErrorOutline","base","SHOW_MESSAGE","CLOSE_MESSAGE","START_LOADING","STOP_LOADING","DELETE_TASK","SET_TASK","DO_LOGIN","DO_LOGOUT","SET_USERS","handleError","error","dispatch","response","console","log","payload","getToken","token","borderRadius","width","TaskForm","createTask","setState","handleChange","Dialog","Divider","accept","files","hidden","box","paddingLeft","paddingRight","paddingBottom","create_button","auth","loadUsers","axios","get","headers","test","post","loadTasks","myTask","filter","myHistory","otherTask","otherHistory","formdata","showDialog","setDialog","closeDialog","deleteTaskData","Container","FormData","append","then","spacing","TaskCard","padding","margin","icon","fontSize","doLogin","history","setItem","stringify","push","email","password","flexDirection","justifyContent","Paper","elavation","to","routes","path","Home","exact","Login","doRegister","flexGrow","menuButton","marginRight","textDecoration","links","doLogout","removeItem","children","isAuthenticated","useHistory","AppBar","position","Toolbar","startIcon","ExitToApp","Component","pathname","location","rest","render","closeMessage","checkLogin","fallback","Spinner","initialState","loadingReducer","messageReducer","combineReducers","middleWares","applyMiddleware","thunkMiddleware","compose","configMiddleware","store","createStore","rootReducer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.98a3bd02.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: [\r\n      'Roboto Condensed',\r\n      'sans-serif',\r\n    ].join(','),\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Select, FormControl, InputLabel, MenuItem } from '@material-ui/core';\r\n\r\nfunction CustomeSelect(props) {\r\n    const { label, value, onChange, options, className, name } = props;\r\n    return (\r\n        <FormControl size=\"small\" variant=\"outlined\" fullWidth className={className}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">{label}</InputLabel>\r\n            <Select\r\n            value={value}\r\n            onChange={onChange}\r\n            label={label}\r\n            inputProps={{\r\n                name: name,\r\n                id: `outlined-${name}-native-simple`,\r\n            }}\r\n            >\r\n            {\r\n                options.map((item, i) => (\r\n                    <MenuItem key={i} value={item.value}>{item.label}</MenuItem>\r\n                ))\r\n            }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CustomeSelect\r\n","export const TOKEN = 'TOKEN';\r\n\r\nexport const task_types = [\r\n    { label: 'Text', value: \"Text\" },\r\n    { label: 'Image', value: \"Image\" },\r\n    { label: 'Video', value: \"Video\" },\r\n]\r\n\r\nexport const users = [\r\n    { label: 'User 1', value: 'User 1' },\r\n    { label: 'User 2', value: 'User 2' },\r\n    { label: 'User 3', value: 'User 3' },\r\n]\r\n\r\nexport const todo_status =  [\r\n    { label: 'TODO', value: 'TODO' },\r\n    { label: 'DOING', value: 'DOING' },\r\n    { label: 'DONE', value: 'DONE' },\r\n]\r\n\r\n\r\n\r\n","export function getInitials(name){\r\n    let initials = '';\r\n    const namearr = name.split(' ');\r\n    namearr.forEach(item => {\r\n        initials = initials + item[0];\r\n    });\r\n    return initials;\r\n}","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n      marginBottom: 8\r\n    },\r\n    media: {\r\n      height: 100,\r\n      paddingTop: '56.25%',\r\n    },\r\n    input: { marginBottom: 8 },\r\n    spaceBottom: { marginBottom: 12 },\r\n    avatar: { background: 'black', color: 'white' }\r\n  }));\r\n\r\n  export default useStyles;","import React from 'react';\r\nimport { Grid, Avatar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { getInitials } from 'utils/helpers';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    root: {\r\n        marginBottom: 8,\r\n    }\r\n})\r\n\r\nfunction Comments({ user, data }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container justify=\"flex-start\" className={classes.root}>\r\n            <Grid item md={3} sm={3} xs={3}>\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {getInitials(user.name)}\r\n            </Avatar>\r\n            </Grid>\r\n            <Grid item md={9} sm={9} xs={9}>\r\n                <Typography paragraph>\r\n                {data}\r\n            </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport {CardHeader, CardMedia, CardContent,\r\n  CardActions, Collapse, Avatar, IconButton,\r\n  Typography, Button, TextField, Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport { Chat, MoreVert } from '@material-ui/icons';\r\nimport CustomeSelect from 'components/CustomeSelect';\r\nimport { todo_status } from 'utils/constants';\r\nimport { getInitials } from 'utils/helpers';\r\nimport useStyles from './styles';\r\nimport Comments from 'components/Comments';\r\nimport clsx from 'clsx';\r\n\r\n\r\nfunction RecipeReviewCard(props) {\r\n  const { user: creator, type, data, users,\r\n    updatedAt, deleteTask, _id, assignedUser, status,\r\n    createComment, loadComments, editTask, deleted\r\n  } = props;\r\n  \r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [comment, setComment] = React.useState('');\r\n  const [comments, setComments] = React.useState([]);\r\n  const [anchor, setAnchor] = React.useState(null);\r\n  const [stateStatus, setStatus] = React.useState('');\r\n  const [user, setUser] = React.useState('');\r\n  \r\n  useEffect(() => {\r\n    if (user === '' && assignedUser) setUser(assignedUser._id);\r\n    if (stateStatus === '' && status) setStatus(status);\r\n  },[user, setUser, assignedUser, setStatus, status, stateStatus]);\r\n\r\n  if(Object.keys(props).length === 0) return null;\r\n  \r\n  const handleExpandClick = async () => {\r\n    if (!expanded) {\r\n      const data = await loadComments(_id);\r\n      setComments(data);\r\n    }\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n\r\n  const handleClose = () => setAnchor(null);\r\n  const handleComment = e => setComment(e.target.value);\r\n  const handleClick = e => setAnchor(e.currentTarget);\r\n  const changeUser = e => {\r\n    const value = e.target.value;\r\n    setUser(value);\r\n    editTask({\r\n      _id,\r\n      status,\r\n      assignedUser: value\r\n    });\r\n  }\r\n  const changeStatus = (e) => {\r\n    const value = e.target.value;\r\n    setStatus(value);\r\n    editTask({\r\n      _id,\r\n      status: value,\r\n      assignedUser\r\n    })\r\n  };\r\n  const closeMenu = () => {\r\n    deleteTask({_id})\r\n    handleClose();\r\n  }\r\n  const submitComment = async () => {\r\n    const TOKEN = localStorage.getItem('TOKEN');\r\n    const { user } = JSON.parse(TOKEN);\r\n    await createComment({ user: user._id, data: comment, task: _id })\r\n    const data = await loadComments(_id);\r\n    setComments(data);\r\n  }\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchor}\r\n        keepMounted\r\n        open={Boolean(anchor)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={closeMenu}>Delete</MenuItem>\r\n      </Menu>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {getInitials(creator.name)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          !deleted ? (\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n            <MoreVert />\r\n          </IconButton>\r\n          ): null\r\n        }\r\n        title={creator.name}\r\n        subheader={new Date(updatedAt).toLocaleString()}\r\n      />\r\n      {\r\n        type === \"Video\" ?\r\n        <CardMedia component=\"iframe\" autoPlay={false} src={data}/> : \r\n        type === \"Image\" ?\r\n        <CardMedia className={classes.media} image={data} />:\r\n        <Typography variant=\"h3\" style={{ textAlign: 'center' }}>{data}</Typography>\r\n      }\r\n      <CardContent>\r\n        <CustomeSelect \r\n          value={stateStatus} \r\n          label=\"Status\" \r\n          disabled={deleted}\r\n          className={classes.input}\r\n          options={!deleted ?todo_status : [{ label: stateStatus, value: stateStatus}]}\r\n          onChange={changeStatus} />\r\n        <CustomeSelect \r\n          value={user} \r\n          disabled={deleted}\r\n          label=\"Assigned User\" \r\n          className={classes.input}\r\n          options={!deleted ?users.data : [{ label: assignedUser.name, value: assignedUser._id}]}\r\n          onChange={changeUser} />\r\n        { deleted && <Typography style={{ color: 'red' }} variant='subtitle1'>Deleted</Typography>}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton \r\n          onClick={handleExpandClick}\r\n          aria-label=\"Comment\">\r\n          <Chat />\r\n          <Typography variant=\"subtitle1\">Comments</Typography>\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <TextField className={classes.input} fullWidth label=\"Comment\" value={comment} onChange={handleComment} variant=\"outlined\" size=\"small\" />\r\n          <Button onClick={submitComment} className={clsx(classes.input, classes.spaceBottom)} fullWidth variant=\"contained\" size=\"small\" color=\"primary\">Comment</Button>\r\n          {\r\n            comments && comments.map(i => <Comments {...i} key={i._id} />)\r\n          }\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RecipeReviewCard;","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction SimpleBackdrop({ loading, open }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={loading || open || false}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(SimpleBackdrop)\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { Snackbar, SnackbarContent } from '@material-ui/core'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined'\r\nimport {ErrorOutline} from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles({\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    success: { background: 'green', display: 'flex' },\r\n    danger: { background: 'red', display: 'flex' },\r\n})\r\n\r\nconst SuccessSnackbar = (props) => {\r\n    const { open, onClose, type, text } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            autoHideDuration={3000}\r\n            onClose={onClose}\r\n            open={open}>\r\n            <SnackbarContent\r\n                className={type==='ok'?classes.success:classes.danger}\r\n                message={\r\n                    <span style={{ display: 'flex' }}>\r\n                        {\r\n                            type==='ok'?\r\n                            <CheckCircleIcon className='mr-3' />:\r\n                            <ErrorOutline className='mr-3' />\r\n                        }\r\n                        {text}\r\n                    </span>\r\n                }\r\n                variant=\"elevation\"\r\n            />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\n\r\nexport default SuccessSnackbar\r\n","export const base = 'https://taskon123.herokuapp.com/api';\r\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE';\r\nexport const CLOSE_MESSAGE = 'CLOSE_MESSAGE';\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const STOP_LOADING = 'STOP_LOADING';\r\nexport const CREATE_TASK = 'CREATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\nexport const SET_TASK = 'SET_TASK';\r\nexport const DO_LOGIN = 'DO_LOGIN';\r\nexport const DO_LOGOUT = 'DO_LOGOUT';\r\nexport const SET_USERS = 'SET_USERS';\r\n\r\nexport const handleError = (error, dispatch) => {\r\n    dispatch({ type: STOP_LOADING });\r\n    if (error.response) console.log(error.response.data);\r\n    if (error.response && error.response.data && error.response.data.data) {\r\n        return dispatch({ type: SHOW_MESSAGE, payload: { type: 'error', text: error.response.data.data } });\r\n    }\r\n    return dispatch({ type: SHOW_MESSAGE, payload: { type: 'error', text: error.message } });\r\n}\r\n\r\nexport const getToken = () => {\r\n    const TOKEN = localStorage.getItem(\"TOKEN\");\r\n    const token = TOKEN ? JSON.parse(TOKEN).token : ''\r\n    return token;\r\n}\r\n\r\nexport const getUserid = () => {\r\n    const TOKEN = localStorage.getItem(\"TOKEN\");\r\n    const userid = TOKEN ? JSON.parse(TOKEN).user._id : ''\r\n    return userid;\r\n}","import React, { useState } from 'react';\r\nimport { CustomeSelect } from 'components';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { task_types as options } from 'utils/constants';\r\nimport { Card, CardHeader, Divider, CardContent, Dialog, TextField, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderRadius: 8,\r\n        width: '100%',\r\n    },\r\n    input: {\r\n        marginBottom: 8\r\n    }\r\n})\r\n\r\nfunction TaskForm(props) {\r\n    const { open, onClose, createTask, users } = props;\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        type: 'Text',\r\n        data: '',\r\n        user: ''\r\n    });\r\n    \r\n    const handleChange = e => {\r\n        const name = e.target.name;\r\n        if (name==='type') return setState({...state, [name]: e.target.value, data: '' })\r\n        setState({ ...state, [name]: e.target.value })\r\n    };\r\n    const handleFile = e => {\r\n        const data = e.target.files[0];\r\n        setState({...state, data });\r\n    }\r\n    const handleSubmit = () => {\r\n        createTask(state);\r\n        setState({ type: 'Text', data: '', user: '' });\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} fullWidth maxWidth=\"xs\" onClose={onClose}>\r\n            <Card className={classes.root}>\r\n                <CardHeader title=\"Create new task\" />\r\n                <Divider />\r\n                <CardContent>\r\n                    <CustomeSelect label=\"Task type\" \r\n                        value={state.type} \r\n                        name=\"type\"\r\n                        onChange={handleChange}\r\n                        options={options}\r\n                        className={classes.input}\r\n                    />\r\n                    {\r\n                        state.type === \"Text\" ?\r\n                        (\r\n                            <TextField name=\"data\" \r\n                            className={classes.input} \r\n                            fullWidth \r\n                            value={state.data}\r\n                            variant=\"outlined\" \r\n                            size=\"small\" type=\"text\" \r\n                            label=\"Enter Task\" \r\n                            onChange={handleChange} />\r\n                        ): (\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                component=\"label\"\r\n                                fullWidth\r\n                                className={classes.input}\r\n                            >\r\n                                {state.data \r\n                                ? state.data.name\r\n                                : \"Select File\"}\r\n                                <input\r\n                                type=\"file\"\r\n                                name=\"data\"\r\n                                accept={state.type === \"Video\" ? \"video/*\": \"image/*\"}\r\n                                onChange={handleFile}\r\n                                hidden\r\n                                />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                    <CustomeSelect label=\"Assign user\" \r\n                        value={state.user} \r\n                        name=\"user\"\r\n                        onChange={handleChange}\r\n                        options={users}\r\n                        className={classes.input}\r\n                    />\r\n                    <Button onClick={handleSubmit}\r\n                    variant=\"contained\" color=\"secondary\" size=\"medium\" fullWidth>Create</Button>\r\n                </CardContent>\r\n            </Card>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Button, Typography, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TaskCard } from 'components';\r\nimport { loadUsers, createTask, loadTasks,\r\n    deleteTask, createComment, loadComments, editTask } from 'actions';\r\nimport { connect } from 'react-redux';\r\nimport TaskForm from './components/Dialog';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 20\r\n    },\r\n    box: {\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        textAlign: 'center',\r\n        marginBottom: 8,\r\n        borderRadius: 4,\r\n        background: '#3F51B5',\r\n        color: 'white'\r\n    },\r\n    create_button: {\r\n        paddingLeft: 30,\r\n        paddingRight: 30,\r\n        paddingTop: 6,\r\n        paddingBottom: 6,\r\n        textAlign: 'center',\r\n        marginBottom: 8,\r\n        borderRadius: 4,\r\n        background: '#4CAF50',\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nfunction Home(props) {\r\n    const {\r\n        loadUsers, users, createTask, task,\r\n        loadTasks, deleteTask, auth\r\n    } = props;\r\n    const classes = useStyles();\r\n    const [showDialog, setDialog] = useState(false);\r\n    const closeDialog = () => setDialog(false);\r\n    const openDialog = () => setDialog(true);\r\n    const createTaskData = (data) => {\r\n        closeDialog();\r\n        const TOKEN = localStorage.getItem('TOKEN');\r\n        const { user } = JSON.parse(TOKEN)\r\n        const formdata = new FormData();\r\n        formdata.append(\"data\", data.data);\r\n        formdata.append(\"type\", data.type);\r\n        formdata.append(\"user\", user._id);\r\n        formdata.append('assignedUser', data.user)\r\n        createTask(formdata)\r\n            .then(() => loadTasks(auth.user._id))\r\n    }\r\n    const deleteTaskData = async (data) => {\r\n        await deleteTask(data);\r\n        await loadTasks(auth.user._id);\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if(!users.data) loadUsers();\r\n        if (auth.user && !task.data ) loadTasks(auth.user._id)\r\n    },[users, loadUsers, task.data, loadTasks, auth.user]);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <TaskForm \r\n                users={ users.data ? users.data: []} \r\n                open={showDialog} \r\n                onClose={closeDialog} \r\n                createTask={createTaskData} />\r\n            <Grid container justify=\"center\" spacing={3} style={{ paddingTop: 12 }}>\r\n                <Grid item md={3}>\r\n                    <div className={classes.box}>\r\n                        <Typography variant=\"h6\">\r\n                            My Tasks\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Tasks created by logged user\r\n                        </Typography>\r\n                    </div>\r\n                    <Button onClick={openDialog} fullWidth className={classes.create_button} variant=\"contained\">Create</Button>\r\n                    {task.myTask && task.myTask.map((i) =><TaskCard deleteTask={deleteTaskData} key={i._id} {...i} {...props} />)}\r\n                </Grid> \r\n                <Grid item md={3}>\r\n                    <div className={classes.box}>\r\n                        <Typography variant=\"h6\">\r\n                            My History\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            History of logged user\r\n                        </Typography>\r\n                    </div>\r\n                    {task.myHistory && task.myHistory.map((item, i) =>(<TaskCard key={i} {...item} />))}\r\n                </Grid> \r\n                <Grid item md={3}>\r\n                    <div className={classes.box}>\r\n                        <Typography variant=\"h6\">\r\n                            Other Tasks\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Tasks created by other users\r\n                        </Typography>\r\n                    </div>\r\n                    {task.otherTask && task.otherTask.map((i) =><TaskCard deleteTask={deleteTaskData} key={i._id} {...i} {...props} />)}\r\n                </Grid> \r\n                <Grid item md={3}>\r\n                    <div className={classes.box}>\r\n                        <Typography variant=\"h6\">\r\n                            Other History\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            History of other users\r\n                        </Typography>\r\n                    </div>\r\n                    {task.otherHistory && task.otherHistory.map((item, i) =>(<TaskCard key={i} {...item} />))}\r\n                </Grid> \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ users: state.users, task: state.task, auth: state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadUsers: () => dispatch(loadUsers()),\r\n    editTask: data => dispatch(editTask(data)),\r\n    loadTasks: data => dispatch(loadTasks(data)),\r\n    createTask: data => dispatch(createTask(data)),\r\n    deleteTask: data => dispatch(deleteTask(data)),\r\n    loadComments: data => dispatch(loadComments(data)),\r\n    createComment: data => dispatch(createComment(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import { base, handleError, SET_USERS, axios, getToken } from \".\"\r\n\r\nexport const loadUsers = () => async dispatch => {\r\n    try {\r\n        const token = getToken();\r\n        const { data: { data } } = await axios.get(`${base}/user/all`, {\r\n            headers: { token }\r\n        });\r\n        const test = data.map(item => ({ label: item.name, value: item._id }));\r\n        return dispatch({ type: SET_USERS, payload: test })\r\n    } catch (error) {\r\n        handleError(error, dispatch);\r\n    }\r\n}","import { base, axios, handleError, START_LOADING, \r\n    STOP_LOADING, getToken, DELETE_TASK,\r\n    SET_TASK, SHOW_MESSAGE  } from 'actions';\r\n\r\n\r\nexport const loadTasks = (_id) => async dispatch => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const token = getToken();\r\n        const { data: { data } } = await axios.get(`${base}/task`, { headers: { token }});\r\n        dispatch({ type: STOP_LOADING });\r\n        const myTask = data.filter(item => item.user._id === _id && !item.deleted);\r\n        const myHistory = data.filter(item => item.user._id === _id && item.deleted);\r\n        const otherTask = data.filter(item => item.user._id !== _id && !item.deleted);\r\n        const otherHistory = data.filter(item => item.user._id !== _id && item.deleted);\r\n        const test = { myTask, myHistory, otherTask, otherHistory, data };\r\n        dispatch({ type: SET_TASK, payload: test });\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\n\r\nexport const createTask = data => async dispatch => {\r\n    try {\r\n        const token = getToken();\r\n        dispatch({ type: START_LOADING });\r\n        await axios.post(`${base}/task`, data, { headers: { token } });\r\n        dispatch({ type: STOP_LOADING });\r\n        dispatch({ type: SHOW_MESSAGE, payload: { type: 'ok', text: 'Task created successfully' }});\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\nexport const editTask = data => async dispatch => {\r\n    try {\r\n        const token = getToken();\r\n        dispatch({ type: START_LOADING });\r\n        await axios.post(`${base}/task/edit`, data, { headers: { token } });\r\n        dispatch({ type: STOP_LOADING });\r\n        dispatch({ type: SHOW_MESSAGE, payload: { type: 'ok', text: 'Task Edited successfully' }});\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\nexport const deleteTask = formdata => async dispatch => {\r\n    try {\r\n        const token = getToken();\r\n        dispatch({ type: START_LOADING });\r\n        await axios.post(`${base}/task/delete`, formdata, { headers: { token } });\r\n        const { data: { data } } = await axios.get(`${base}/task`, { headers: { token }});\r\n        dispatch({ type: STOP_LOADING });\r\n        dispatch({ type: DELETE_TASK });\r\n        dispatch({ type: SHOW_MESSAGE, payload: { type: 'ok', text: 'Task Deleted successfully' }});\r\n        dispatch({ type: SET_TASK, payload: data });\r\n    } catch (error) {\r\n        return handleError(error, dispatch)\r\n    }\r\n};","import { getToken, base, axios, START_LOADING, STOP_LOADING, SHOW_MESSAGE, handleError } from '.'\r\n\r\nexport const createComment = data => async dispatch => {\r\n    try {\r\n        console.log(data)\r\n        const token = getToken();\r\n        dispatch({ type: START_LOADING });\r\n        await axios.post(`${base}/comment`, data, { headers: { token } });\r\n        dispatch({ type: STOP_LOADING });\r\n        dispatch({ type: SHOW_MESSAGE, payload: { type: 'ok', text: 'Comment created successfully' }});\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\nexport const loadComments = _id => async dispatch => {\r\n    try {\r\n        const token = getToken();\r\n        dispatch({ type: START_LOADING });\r\n        const { data: { data } } = await axios.get(`${base}/comment/${_id}`, { headers: { token } });\r\n        dispatch({ type: STOP_LOADING });\r\n        return data;\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TextField, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport { connect } from 'react-redux';\r\nimport { doLogin } from 'actions';\r\n\r\nconst useStyles  = makeStyles({\r\n    root: {\r\n        padding: 20,\r\n        margin: 'auto',\r\n        textAlign: 'center'\r\n    },\r\n    input: {\r\n        marginBottom: 8\r\n    },\r\n    icon: {\r\n        width: 100,\r\n        height: 100,\r\n        fontSize: 100,\r\n    }\r\n})\r\n\r\nfunction Login({ doLogin, history }) {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const handleChange = e => setState({...state, [e.target.name]: e.target.value });\r\n    const handleSubmit = () => doLogin({state, history});\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <div  style={{\r\n                height: '85vh',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Grid item md={8} sm={8} xs={10} style={{ margin: 'auto'}}>\r\n                    <Paper className={classes.root} elavation={3}>\r\n                        <AccountCircleOutlinedIcon className={classes.icon} />\r\n                        <Typography style={{ marginBottom: 20 }} variant=\"h3\">Login</Typography>\r\n                        <TextField \r\n                            fullWidth \r\n                            value={state.email} \r\n                            size=\"small\" \r\n                            variant=\"outlined\" \r\n                            name=\"email\" \r\n                            type=\"email\"\r\n                            className={classes.input}\r\n                            onChange={handleChange} \r\n                            label=\"Enter email\" />\r\n                        <TextField \r\n                            fullWidth \r\n                            value={state.password} \r\n                            size=\"small\" \r\n                            variant=\"outlined\" \r\n                            name=\"password\" \r\n                            type=\"password\"\r\n                            className={classes.input}\r\n                            onChange={handleChange} \r\n                            label=\"Enter password\" />\r\n                        <Button onClick={handleSubmit} fullWidth color=\"secondary\" variant=\"contained\" size=\"medium\">Login</Button>\r\n                        <Link to=\"/register\">\r\n                            <Typography variant=\"subtitle1\">Don't have an account? Click here</Typography>\r\n                        </Link>\r\n                    </Paper>\r\n                </Grid>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ doLogin: data => dispatch(doLogin(data))});\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import { \r\n    handleError, axios, base, \r\n    START_LOADING, STOP_LOADING,\r\n    DO_LOGIN,\r\n} from '.';\r\nimport { DO_LOGOUT, SHOW_MESSAGE } from './type.action';\r\n\r\nexport const doLogin = ({state, history}) => async dispatch => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await axios.post(`${base}/auth/login`, state);\r\n        localStorage.setItem(\"TOKEN\", JSON.stringify(data));\r\n        dispatch({ type: STOP_LOADING });\r\n        dispatch({ type: DO_LOGIN, payload: data });\r\n        return history.push('/');\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\n\r\nexport const doRegister = ({state, history}) => async dispatch => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        await axios.post(`${base}/auth/register`, state);\r\n        dispatch({ type: STOP_LOADING });\r\n        dispatch({ type: SHOW_MESSAGE, payload: { type: 'ok', text: 'Registration success' }});\r\n        return history.push('/login');\r\n    } catch (error) {\r\n        handleError(error, dispatch)\r\n    }\r\n};\r\n\r\nexport const checkLogin = () => dispatch => {\r\n    const token = localStorage.getItem(\"TOKEN\");\r\n    if (token) {\r\n        const { user } = JSON.parse(token);\r\n        dispatch({ type: DO_LOGIN, payload: { user }});\r\n    }\r\n}\r\n\r\nexport const doLogout = history => dispatch => {\r\n    localStorage.removeItem(\"TOKEN\");\r\n    dispatch({ type: DO_LOGOUT });\r\n    return history.push('/login');\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TextField, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport { connect } from 'react-redux';\r\nimport { doRegister } from 'actions';\r\n\r\nconst useStyles  = makeStyles({\r\n    root: {\r\n        padding: 20,\r\n        margin: 'auto',\r\n        textAlign: 'center'\r\n    },\r\n    input: {\r\n        marginBottom: 8\r\n    },\r\n    icon: {\r\n        width: 100,\r\n        height: 100,\r\n        fontSize: 100,\r\n    }\r\n})\r\n\r\nfunction Register({ doRegister, history }) {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const handleChange = e => setState({...state, [e.target.name]: e.target.value });\r\n    const handleSubmit = () => doRegister({state, history});\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <div  style={{\r\n            height: '85vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n        }}>\r\n            <Grid item md={6} sm={6} xs={10} style={{ margin: 'auto'}}>\r\n                <Paper className={classes.root} elavation={3}>\r\n                    <PersonAddOutlinedIcon className={classes.icon} /><br />\r\n                    <Typography style={{ marginBottom: 20 }} variant=\"h3\">Register</Typography>\r\n                    <TextField \r\n                        fullWidth \r\n                        value={state.name} \r\n                        size=\"small\" \r\n                        variant=\"outlined\" \r\n                        name=\"name\" \r\n                        type=\"text\"\r\n                        className={classes.input}\r\n                        onChange={handleChange} \r\n                        label=\"Enter name\" />\r\n                    <TextField \r\n                        fullWidth \r\n                        value={state.email} \r\n                        size=\"small\" \r\n                        variant=\"outlined\" \r\n                        name=\"email\" \r\n                        type=\"email\"\r\n                        className={classes.input}\r\n                        onChange={handleChange} \r\n                        label=\"Enter email\" />\r\n                    <TextField \r\n                        fullWidth \r\n                        value={state.password} \r\n                        size=\"small\" \r\n                        variant=\"outlined\" \r\n                        name=\"password\" \r\n                        type=\"password\"\r\n                        className={classes.input}\r\n                        onChange={handleChange} \r\n                        label=\"Enter password\" />\r\n                    <Button fullWidth onClick={handleSubmit} color=\"secondary\" variant=\"contained\" size=\"medium\">Register</Button>\r\n                    <Link to=\"/login\">\r\n                        <Typography variant=\"subtitle1\">Already have an account? Click here</Typography>\r\n                    </Link>\r\n                </Paper>\r\n            </Grid>\r\n        </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ doRegister: data => dispatch(doRegister(data))});\r\nexport default connect(null, mapDispatchToProps)(Register)\r\n","import { Home, Login, Register } from 'pages';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: Login,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/register',\r\n    component: Register,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, Button, Avatar } from '@material-ui/core';\r\nimport { ExitToApp, AccountCircleOutlined, PersonAddOutlined } from '@material-ui/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { doLogout } from 'actions';\r\nimport { getInitials } from 'utils/helpers';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      color: 'white',\r\n      textDecoration: 'none'\r\n    },\r\n    links: {\r\n      textDecoration: 'none',\r\n      color: 'white'\r\n    },\r\n    avatar: { background: 'black', color: \"white\" }\r\n  };\r\n});\r\n\r\nfunction Layout({ children, doLogout, auth: { isAuthenticated, user } }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar style={{ background: '#FF5722'}}>\r\n          <Link to=\"/\" className={classes.title}>\r\n            <Typography variant=\"h6\">\r\n              Task Manager\r\n            </Typography>\r\n          </Link>\r\n          {\r\n            !isAuthenticated ?\r\n            (\r\n              <>\r\n                <Link to=\"/login\" className={classes.links}>\r\n            <Button startIcon={<AccountCircleOutlined />} color=\"inherit\">Login</Button>\r\n          </Link>\r\n          <Link to=\"/register\" className={classes.links}>\r\n            <Button startIcon={<PersonAddOutlined />} color=\"inherit\">Register</Button>\r\n          </Link>\r\n              </>\r\n            ): (\r\n                <>\r\n                  <Button onClick={() => doLogout(history)} className={classes.links} startIcon={<ExitToApp />} color=\"inherit\">Logout</Button>\r\n                  <Avatar className={classes.avatar}>\r\n                    {user && getInitials(user.name)}\r\n                  </Avatar>\r\n                </>\r\n            )\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\nconst mapDispatchToProps = dispatch => ({ doLogout: (history) => dispatch(doLogout(history))})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { TOKEN } from 'utils/constants';\r\n\r\nconst PrivateRoute = ({ component: Component, location: { pathname }, auth: { isAuthenticated }, ...rest }) => {\r\n\r\n  return (\r\n    <>\r\n    {\r\n      (pathname ==='/login' || pathname === '/register') ?\r\n      (\r\n        <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          return (localStorage.getItem(TOKEN) && isAuthenticated ? (<Redirect to=\"/\" />)\r\n            : (<Component {...props} />));\r\n        }}\r\n      />\r\n      ): (\r\n        <Route\r\n        {...rest}\r\n          render={(props) => {\r\n            return (!localStorage.getItem(TOKEN) && !isAuthenticated ? (<Redirect to=\"/login\" />)\r\n              : (<Component {...props} />));\r\n          }}\r\n        />\r\n      )\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Suspense, useEffect } from 'react';\r\nimport { Switch, BrowserRouter } from 'react-router-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport theme from 'theme/theme';\r\nimport routes from './routes';\r\nimport Layout from 'layout';\r\nimport { Spinner, SnackBar } from 'components';\r\nimport { connect } from 'react-redux';\r\nimport { closeMessage, checkLogin } from 'actions';\r\n// import { Login, Register } from 'pages';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction Body(props) {\r\n  const { message, closeMessage, checkLogin } = props;\r\n\r\n  useEffect(() => {\r\n    checkLogin();\r\n  },[checkLogin]);\r\n\r\n  return (\r\n    <Suspense fallback={<Spinner open={true} />}>\r\n      <BrowserRouter>\r\n          <MuiThemeProvider theme={theme}>\r\n            <Spinner/>\r\n            <SnackBar\r\n              onClose={closeMessage}\r\n              open={message.open}\r\n              type={message.type}\r\n              text={message.text}\r\n            />\r\n            <Layout>\r\n              <Switch>\r\n                {/* <Route exact path=\"/login\" render={() => { return <Login />; }} />\r\n                <Route exact path=\"/register\" render={() => { return <Register />; }} /> */}\r\n                {\r\n                  routes.map((item, i) => {\r\n                    return (\r\n                      <PrivateRoute key={i} {...item} />\r\n                    );\r\n                  })\r\n                }\r\n              </Switch>\r\n            </Layout>\r\n          </MuiThemeProvider>\r\n      </BrowserRouter>\r\n    </Suspense>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({ message: state.message });\r\nconst mapDispatch = dispatch =>({ \r\n  closeMessage: () => dispatch(closeMessage()),\r\n  checkLogin: () => dispatch(checkLogin())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch )(Body)\r\n\r\n","import { CLOSE_MESSAGE, SHOW_MESSAGE } from 'actions'\r\n\r\nexport const closeMessage = () => dispatch => dispatch({\r\n    type: CLOSE_MESSAGE\r\n})\r\n\r\nexport const showMessage = data => dispatch => dispatch({\r\n    type: SHOW_MESSAGE,\r\n    payload: data\r\n})\r\n","import { DO_LOGIN, DO_LOGOUT } from 'actions';\r\nimport { TOKEN } from '../utils/constants';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(TOKEN),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case DO_LOGIN: \r\n      return {...state, isAuthenticated: true, user: payload.user };\r\n    case DO_LOGOUT: return {\r\n      ...state, \r\n      isAuthenticated: null,\r\n      loading: true,\r\n      user: null\r\n    };\r\n    default: return state;\r\n  }\r\n}\r\n","import { DELETE_TASK, DO_LOGOUT, SET_TASK } from \"actions\";\r\n\r\nconst initialState = {\r\n  data: null,\r\n  myTask: [],\r\n  myHistory: [],\r\n  otherTask: [],\r\n  otherHistory: []\r\n};\r\n\r\nexport default function taskReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_TASK: return { ...state, ...payload }\r\n    case DELETE_TASK: return { \r\n      ...state, \r\n      data: null,\r\n      myTask: [],\r\n      myHistory: [],\r\n      otherTask: [],\r\n      otherHistory: []}\r\n    case DO_LOGOUT: return { \r\n      ...state, \r\n      data: null,\r\n      myTask: [],\r\n      myHistory: [],\r\n      otherTask: [],\r\n      otherHistory: []}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { START_LOADING, STOP_LOADING } from 'actions'\r\n\r\nconst initialState = false\r\n\r\nconst loadingReducer = (state = initialState, action) => {\r\n    const {type} = action\r\n    switch (type) {\r\n        case START_LOADING: return true;\r\n        case STOP_LOADING: return false;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default loadingReducer\r\n","import { SHOW_MESSAGE, CLOSE_MESSAGE } from 'actions'\r\n\r\nconst initialState = {\r\n    open: false,\r\n    type: null,\r\n    text: null,\r\n}\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    const {type,payload} = action\r\n    switch (type) {\r\n        case SHOW_MESSAGE: return {...state, open: true, ...payload }\r\n        case CLOSE_MESSAGE: return { ...state, open: false}\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default messageReducer\r\n","import { DO_LOGOUT, SET_USERS } from \"actions\";\r\n\r\nconst initialState = {\r\n    data: null\r\n  };\r\n  \r\n  export default function userReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case SET_USERS: return { ...state, data: payload }\r\n      case DO_LOGOUT: return { data: null }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from 'redux';\r\nimport authReducer from './auth.reducer';\r\nimport taskReducer from './task.reducer';\r\nimport loadingReducer from './loading.reducer';\r\nimport messageReducer from './message.reducer';\r\nimport userReducer from './user.reducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  task: taskReducer,\r\n  loading: loadingReducer,\r\n  message: messageReducer,\r\n  users: userReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nfunction configMiddleware() {\r\n  const middleWares = applyMiddleware(thunkMiddleware);\r\n  return compose(middleWares);\r\n}\r\n\r\nconst initialState = {};\r\nconst middleWares = configMiddleware();\r\nconst store = createStore(rootReducer, initialState, middleWares);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport Body from './routes/Body';\nimport store from 'store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Body />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root'),\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}